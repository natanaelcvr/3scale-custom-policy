{
  "name": "JWTClaimCheck",
  "version": "0.1",
  "schema" : {
    "name" :"JWTClaimCheck",
    "version" : "0.1",
    "$schema" : "http://apicast.io/policy-v1/schema#manifest#",
    "summary" : "Allow or deny traffic based on a JWT claim",
    "description" : [
      "This Policy allow to block traffic based on a JWT token.",
      "To verify any JWT claim can be used and can be compared ",
      "using plain or liquid filters."
    ],
    "configuration": {
      "definitions": {
        "value_type": {
          "$id": "#/definitions/value_type",
          "type": "string",
          "oneOf": [{
            "enum": ["plain"],
            "title": "Evaluate as plain text."
          }, {
            "enum": ["liquid"],
            "title": "Evaluate as liquid."
          }]
        }
      },
      "type": "object",
      "properties": {
        "error_message": {
          "title": "Error message",
          "description": "Error message to show to user when traffic is blocked",
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "required": [
              "resource"
            ],
            "properties": {
              "combine_op": {
                "type": "string",
                "enum": ["and", "or"],
                "default": "and"
              },
              "methods": {
                "description": "Allowed methods",
                "type": "array",
                "default": ["ANY"],
                "items": {
                  "type": "string",
                  "enum": [
                    "ANY",
                    "GET",
                    "HEAD",
                    "POST",
                    "PUT",
                    "DELETE",
                    "PATCH",
                    "OPTIONS",
                    "TRACE",
                    "CONNECT"
                  ]
                }
              },
              "resource": {
                "type": "string",
                "description": "Resource controlled by the rule. This is the same format as Mapping Rules. This matches from the beginning of the string and to make an exact match you need to use '$' at the end."
              },
              "resource_type": {
                "description": "How to evaluate 'resource' field",
                "$ref": "#/definitions/value_type"
              },
              "operations": {
                "description": "Operations to perform the condition",
                "type": "array",
                "items": {
                  "required": [
                    "jwt_claim",
                    "jwt_claim_type",
                    "op",
                    "value"
                  ],
                  "type": "object",
                  "properties": {
                    "jwt_claim": {
                      "description": "String to get JWT claim", 
                      "type": "string"
                    },
                    "jwt_claim_type": {
                      "description": "How to evaluate 'jwt_claim' value",
                      "$ref": "#/definitions/value_type"
                    },
                    "op": {
                      "description": "Match operation to compare JWT claim with the provided value. In case that a not a number is in use in numeric comparison, the value will be transformed to 0.",
                      "type": "string",
                      "enum": [
                        "==",
                        "!=",
                        "matches"
                      ]
                    },
                    "value": {
                      "description": "Value to compare the retrieved JWT claim",
                      "type": "string"
                    },
                    "value_type": {
                      "description": "How to evaluate 'value' field",
                      "$ref": "#/definitions/value_type"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}